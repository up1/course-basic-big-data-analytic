services:
  postgres:
    image: postgres:16
    container_name: nrt-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
  
  adminer:
    image: adminer
    container_name: nrt-adminer
    ports:
      - "8080:8080"

  producer:
    build:
      context: ./producer
    container_name: nrt-producer
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      BATCH_SIZE: ${BATCH_SIZE}
      BATCH_INTERVAL_SECONDS: ${BATCH_INTERVAL_SECONDS}
    depends_on:
      postgres:
        condition: service_healthy

  dbt:
    build:
      context: ./dbt
    container_name: nrt-dbt
    environment:
      DBT_DB: ${DBT_DB}
      DBT_USER: ${DBT_USER}
      DBT_PASSWORD: ${DBT_PASSWORD}
      DBT_HOST: postgres
      DBT_PORT: ${DBT_PORT}
      DBT_SCHEMA: ${DBT_SCHEMA}
    depends_on:
      postgres:
        condition: service_healthy